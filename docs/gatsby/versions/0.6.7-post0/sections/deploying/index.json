{
  "parents": [],
  "prev": { "link": "../reference/reference/", "title": "Reference" },
  "next": { "link": "local/", "title": "Local or Standalone Dagit" },
  "title": "Deploying Dagster",
  "meta": {},
  "body": "<div class=\"section\" id=\"deploying-dagster\">\n<h1>Deploying Dagster<a class=\"headerlink\" href=\"#deploying-dagster\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"quick-start\">\n<h2>Quick Start<a class=\"headerlink\" href=\"#quick-start\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Dagster supports a wide variety of deployment environments. You can find a full guide to the\ndifferent components of a Dagster deployment in the <a class=\"reference external\" href=\"reference.html\">reference guide</a>.</p>\n<p>When configuring a Dagster deployment, at minimum you\u2019ll likely want to configure up two things:\n<strong>execution</strong> and <strong>storage</strong>:</p>\n<p class=\"rubric\">Execution</p>\n<p>Out of the box, Dagster runs single-process execution. To enable multi-process execution, add the\nfollowing to your pipeline configuration YAML:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id2\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">execution_config.yaml</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">multiprocess</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">max_concurrent</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0</span>\n<span class=\"nt\">storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">filesystem</span><span class=\"p\">:</span>\n</pre></div>\n</div>\n</div>\n<p>Any pipelines that are configured with this YAML will execute in multiprocess mode. Note that\nsetting <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> to 0 implies setting concurrency of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multiprocessing.cpu_count()</span></code></a>. Along with native execution, Dagster supports other\nexecution engines including <a class=\"reference external\" href=\"other/airflow.html\">Airflow</a> and <a class=\"reference external\" href=\"other/dask.html\">Dask</a>; check out\nthe <a class=\"reference external\" href=\"reference.html\">reference guide</a> for more information.</p>\n<p class=\"rubric\">Storage</p>\n<p>The best place to start is to set the environment variable <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code> to a local folder in\nthe environment where you run Dagster/Dagit. The system will then use that folder for run/events and\nlogs storage.</p>\n<p>In a production context with large-scale data, you\u2019ll want to consider storing data elsewhere.</p>\n<p>Runs and events use local SQLite databases in <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME</span></code> by default; we also support\nPostgreSQL storage. To use PostgreSQL for runs and events storage, add the following lines to your\n<code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME/dagster.yaml</span></code>:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id3\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">dagster.yaml</span><a class=\"headerlink\" href=\"#id3\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span> <span class=\"nt\">run_storage</span><span class=\"p\">:</span>\n     <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster_postgres.run_storage</span>\n     <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">PostgresRunStorage</span>\n     <span class=\"nt\">config</span><span class=\"p\">:</span>\n         <span class=\"nt\">postgres_url</span><span class=\"p\">:</span> <span class=\"s\">&quot;postgresql://{username}:{password}@{host}:5432/{database}&quot;</span>\n\n <span class=\"nt\">event_log_storage</span><span class=\"p\">:</span>\n     <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">dagster_postgres.event_log</span>\n     <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">PostgresEventLogStorage</span>\n     <span class=\"nt\">config</span><span class=\"p\">:</span>\n         <span class=\"nt\">postgres_url</span><span class=\"p\">:</span> <span class=\"s\">&quot;postgresql://{username}:{password}@{host}:5432/{database}&quot;</span>\n</pre></div>\n</div>\n</div>\n<p>and replace the connection string fields indicated with the appropriate configuration for your\nenvironment.</p>\n<p>System storage is set to in-memory by default. For pipelines which execute in multi-process mode or\notherwise need to share data across process or machine boundaries, intermediates should be stored\nelsewhere\u2014this is why we set storage to filesystem for the multiprocess execution configuration\nabove.</p>\n<p>In general, intermediates can be stored on the filesystem by configuring storage in your pipeline\nconfiguration YAML:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id4\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">execution_config.yaml</span><a class=\"headerlink\" href=\"#id4\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">filesystem</span><span class=\"p\">:</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">base_dir</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/tmp/foo/</span>\n</pre></div>\n</div>\n</div>\n</div>\n<div class=\"section\" id=\"more-information\">\n<h2>More Information<a class=\"headerlink\" href=\"#more-information\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"toctree-wrapper compound\">\n<ul>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"local/\">Local or Standalone Dagit</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"aws/\">AWS Deployment</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"gcp/\">GCP Deployment</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"reference/\">Reference</a></li>\n<li class=\"toctree-l1\"><a class=\"reference internal\" href=\"other/\">Other Deployment Targets</a></li>\n</ul>\n</div>\n</div>\n</div>\n",
  "metatags": "",
  "rellinks": [
    ["genindex", "General Index", "I", "index"],
    ["py-modindex", "Python Module Index", "", "modules"],
    ["sections/deploying/local", "Local or Standalone Dagit", "N", "next"],
    ["sections/reference/reference", "Reference", "P", "previous"]
  ],
  "sourcename": "sections/deploying/index.rst.txt",
  "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Deploying Dagster</a><ul>\n<li><a class=\"reference internal\" href=\"#quick-start\">Quick Start</a></li>\n<li><a class=\"reference internal\" href=\"#more-information\">More Information</a></li>\n</ul>\n</li>\n</ul>\n",
  "display_toc": true,
  "page_source_suffix": ".rst",
  "current_page_name": "sections/deploying/index",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
