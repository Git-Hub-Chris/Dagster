{
  "parents": [{ "link": "../../api/", "title": "API Docs" }],
  "prev": { "link": "../pipeline/", "title": "Pipelines" },
  "next": { "link": "../types/", "title": "Types" },
  "title": "Execution",
  "meta": {},
  "body": "<div class=\"section\" id=\"execution\">\n<h1>Execution<a class=\"headerlink\" href=\"#execution\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<div class=\"section\" id=\"executing-pipelines\">\n<h2>Executing pipelines<a class=\"headerlink\" href=\"#executing-pipelines\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.execute_pipeline\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline</em>, <em class=\"sig-param\">environment_dict=None</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">instance=None</em>, <em class=\"sig-param\">raise_on_error=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api/#execute_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a pipeline synchronously.</p>\n<p>Users will typically call this API when testing pipeline execution, or running standalone\nscripts.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<a class=\"reference internal\" href=\"../pipeline/#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>environment_dict</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The enviroment configuration that parameterizes this run,\nas a dict.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\"><em>RunConfig</em></a><em>]</em>) \u2013 Optionally specifies additional config options for\npipeline execution.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../internals/#dagster.core.instance.DagsterInstance\" title=\"dagster.core.instance.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineExecutionResult\" title=\"dagster.PipelineExecutionResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineExecutionResult</span></code></a></p>\n</dd>\n</dl>\n<p>For the asynchronous version, see <a class=\"reference internal\" href=\"#dagster.execute_pipeline_iterator\" title=\"dagster.execute_pipeline_iterator\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline_iterator()</span></code></a>.</p>\n<p>This is the entrypoint for dagster CLI execution. For the dagster-graphql entrypoint, see\n<code class=\"docutils literal notranslate\"><span class=\"pre\">dagster.core.execution.api.execute_plan()</span></code>.</p>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.execute_pipeline_iterator\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_pipeline_iterator</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline</em>, <em class=\"sig-param\">environment_dict=None</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">instance=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api/#execute_pipeline_iterator\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_pipeline_iterator\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a pipeline iteratively.</p>\n<p>Rather than package up the result of running a pipeline into a single object, like\n<a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>, this function yields the stream of events resulting from pipeline\nexecution.</p>\n<p>This is intended to allow the caller to handle these events on a streaming basis in whatever\nway is appropriate.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<a class=\"reference internal\" href=\"../pipeline/#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>environment_dict</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The enviroment configuration that parameterizes this run,\nas a dict.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\"><em>RunConfig</em></a><em>]</em>) \u2013 Optionally specifies additional config options for\npipeline execution.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../internals/#dagster.core.instance.DagsterInstance\" title=\"dagster.core.instance.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The stream of events resulting from pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Iterator[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.execute_pipeline_with_preset\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_pipeline_with_preset</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline</em>, <em class=\"sig-param\">preset_name</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">instance=None</em>, <em class=\"sig-param\">raise_on_error=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/api/#execute_pipeline_with_preset\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_pipeline_with_preset\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a pipeline synchronously, with the given preset.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline</strong> (<a class=\"reference internal\" href=\"../pipeline/#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline to execute.</p></li>\n<li><p><strong>preset_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The preset to use.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\"><em>RunConfig</em></a><em>]</em>) \u2013 Optionally specifies additional config options for\npipeline execution. (default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>)</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../internals/#dagster.core.instance.DagsterInstance\" title=\"dagster.core.instance.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The instance to execute against. If this is <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>,\nan ephemeral instance will be used, and no artifacts will be persisted from the run.\n(default: <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code>)</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefault is <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of pipeline execution.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.PipelineExecutionResult\" title=\"dagster.PipelineExecutionResult\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PipelineExecutionResult</span></code></a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executing-solids\">\n<h2>Executing solids<a class=\"headerlink\" href=\"#executing-solids\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"function\">\n<dt id=\"dagster.execute_solid\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid_def</em>, <em class=\"sig-param\">mode_def=None</em>, <em class=\"sig-param\">input_values=None</em>, <em class=\"sig-param\">environment_dict=None</em>, <em class=\"sig-param\">run_config=None</em>, <em class=\"sig-param\">raise_on_error=True</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test/#execute_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a single solid in an ephemeral pipeline.</p>\n<p>Intended to support unit tests. Input values may be passed directly, and no pipeline need be\nspecified \u2013 an ephemeral pipeline will be constructed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>solid_def</strong> (<a class=\"reference internal\" href=\"../solids/#dagster.SolidDefinition\" title=\"dagster.SolidDefinition\"><em>SolidDefinition</em></a>) \u2013 The solid to execute.</p></li>\n<li><p><strong>mode_def</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../pipeline/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><em>ModeDefinition</em></a><em>]</em>) \u2013 The mode within which to execute the solid. Use this\nif, e.g., custom resources, loggers, or executors are desired.</p></li>\n<li><p><strong>input_values</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of input names to input values, used to\npass inputs to the solid directly. You may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">environment_dict</span></code> to\nconfigure any inputs that are configurable.</p></li>\n<li><p><strong>environment_dict</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The enviroment configuration that parameterizes this\nexecution, as a dict.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\"><em>RunConfig</em></a><em>]</em>) \u2013 Optionally specifies additional config options for\npipeline execution.</p></li>\n<li><p><strong>raise_on_error</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\"><em>bool</em></a><em>]</em>) \u2013 Whether or not to raise exceptions when they occur.\nDefaults to <code class=\"docutils literal notranslate\"><span class=\"pre\">True</span></code>, since this is the most useful behavior in test.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of executing the\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.execute_solid_within_pipeline\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_solid_within_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_def</em>, <em class=\"sig-param\">solid_name</em>, <em class=\"sig-param\">inputs=None</em>, <em class=\"sig-param\">environment_dict=None</em>, <em class=\"sig-param\">run_config=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test/#execute_solid_within_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_solid_within_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a single solid within an existing pipeline.</p>\n<p>Intended to support tests. Input values may be passed directly.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_def</strong> (<a class=\"reference internal\" href=\"../pipeline/#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline within which to execute the solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid, or the aliased solid, to execute.</p></li>\n<li><p><strong>inputs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em>) \u2013 A dict of input names to input values, used to\npass input values to the solid directly. You may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">environment_dict</span></code> to\nconfigure any inputs that are configurable.</p></li>\n<li><p><strong>environment_dict</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The enviroment configuration that parameterizes this\nexecution, as a dict.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\"><em>RunConfig</em></a><em>]</em>) \u2013 Optionally specifies additional config options for\npipeline execution.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of executing the\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster.execute_solids_within_pipeline\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">execute_solids_within_pipeline</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_def</em>, <em class=\"sig-param\">solid_names</em>, <em class=\"sig-param\">inputs=None</em>, <em class=\"sig-param\">environment_dict=None</em>, <em class=\"sig-param\">run_config=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/utils/test/#execute_solids_within_pipeline\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.execute_solids_within_pipeline\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execute a set of solids within an existing pipeline.</p>\n<p>Intended to support tests. Input values may be passed directly.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>pipeline_def</strong> (<a class=\"reference internal\" href=\"../pipeline/#dagster.PipelineDefinition\" title=\"dagster.PipelineDefinition\"><em>PipelineDefinition</em></a>) \u2013 The pipeline within which to execute the solid.</p></li>\n<li><p><strong>solid_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the solid, or the aliased solid, to execute.</p></li>\n<li><p><strong>inputs</strong> (<em>Optional</em><em>[</em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Dict</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><em>Any</em><em>]</em><em>]</em><em>]</em>) \u2013 A dict keyed on solid names, whose values are\ndicts of input names to input values, used to pass input values to the solids directly.\nYou may also use the <code class=\"docutils literal notranslate\"><span class=\"pre\">environment_dict</span></code> to configure any inputs that are configurable.</p></li>\n<li><p><strong>environment_dict</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The enviroment configuration that parameterizes this\nexecution, as a dict.</p></li>\n<li><p><strong>run_config</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\"><em>RunConfig</em></a><em>]</em>) \u2013 Optionally specifies additional config options for\npipeline execution.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The results of\nexecuting the solids, keyed by solid name.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"execution-context\">\n<h2>Execution context<a class=\"headerlink\" href=\"#execution-context\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.SystemComputeExecutionContext\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SystemComputeExecutionContext</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline_context_data</em>, <em class=\"sig-param\">log_manager</em>, <em class=\"sig-param\">step</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/context/system/#SystemComputeExecutionContext\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SystemComputeExecutionContext\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">context</span></code> object available to solid compute logic.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.SystemComputeExecutionContext.solid_config\">\n<code class=\"sig-name descname\">solid_config</code><a class=\"headerlink\" href=\"#dagster.SystemComputeExecutionContext.solid_config\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The parsed config specific to this solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.SystemComputeExecutionContext.log\">\n<code class=\"sig-name descname\">log</code><a class=\"headerlink\" href=\"#dagster.SystemComputeExecutionContext.log\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Centralized log dispatch from user code.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"../internals/#dagster.DagsterLogManager\" title=\"dagster.DagsterLogManager\">DagsterLogManager</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.SystemComputeExecutionContext.resources\">\n<code class=\"sig-name descname\">resources</code><a class=\"headerlink\" href=\"#dagster.SystemComputeExecutionContext.resources\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>An object whose attributes contain the resources available to this solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Any</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.SystemComputeExecutionContext.run_id\">\n<code class=\"sig-name descname\">run_id</code><a class=\"headerlink\" href=\"#dagster.SystemComputeExecutionContext.run_id\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The id of this pipeline run.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pipeline-and-solid-results\">\n<h2>Pipeline and solid results<a class=\"headerlink\" href=\"#pipeline-and-solid-results\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"class\">\n<dt id=\"dagster.PipelineExecutionResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">PipelineExecutionResult</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">pipeline</em>, <em class=\"sig-param\">run_id</em>, <em class=\"sig-param\">event_list</em>, <em class=\"sig-param\">reconstruct_context</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#PipelineExecutionResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The result of executing a pipeline.</p>\n<p>Returned by <a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a>. Users should not instantiate this class.</p>\n<dl class=\"method\">\n<dt id=\"dagster.PipelineExecutionResult.output_for_solid\">\n<code class=\"sig-name descname\">output_for_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">handle</em>, <em class=\"sig-param\">output_name='result'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#PipelineExecutionResult.output_for_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.output_for_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the output of a solid by its solid handle string and output name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>handle</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The string handle for the solid.</p></li>\n<li><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 Optional. The name of the output, default to DEFAULT_OUTPUT.</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The output value for the handle and output_name.</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PipelineExecutionResult.result_for_handle\">\n<code class=\"sig-name descname\">result_for_handle</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">handle</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#PipelineExecutionResult.result_for_handle\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.result_for_handle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a solid by its solid handle string.</p>\n<p>This allows indexing into top-level solids to retrieve the results of children of\ncomposite solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>handle</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The string handle for the solid.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the given\nsolid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PipelineExecutionResult.result_for_solid\">\n<code class=\"sig-name descname\">result_for_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#PipelineExecutionResult.result_for_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.result_for_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a top level solid in the pipeline.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the top-level solid or aliased solid for which to retrieve the\nresult.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the solid\nexecution within the pipeline.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PipelineExecutionResult.solid_result_list\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">solid_result_list</code><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.solid_result_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The results for each\ntop level solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PipelineExecutionResult.step_event_list\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">step_event_list</code><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.step_event_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>List[DagsterEvent] The full list of events generated by steps in the pipeline execution.</p>\n<p>Excludes events generated by the pipeline lifecycle, e.g., <code class=\"docutils literal notranslate\"><span class=\"pre\">PIPELINE_START</span></code>.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.PipelineExecutionResult.success\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">success</code><a class=\"headerlink\" href=\"#dagster.PipelineExecutionResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether all steps in the pipeline execution were successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.SolidExecutionResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">SolidExecutionResult</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid</em>, <em class=\"sig-param\">step_events_by_kind</em>, <em class=\"sig-param\">reconstruct_context</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#SolidExecutionResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execution result for a leaf solid in a pipeline.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_input_event_dict\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_input_event_dict</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_input_event_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_INPUT</span></code>, keyed by input name.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_output_event_dict\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_output_event_dict</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_output_event_dict\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code>, keyed by output name</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, <a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_step_events\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_step_events</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_step_events\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events generated by execution of the solid compute function.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.compute_step_failure_event\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">compute_step_failure_event</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.compute_step_failure_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_FAILURE</span></code> event, throws if it did not fail.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.expectation_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">expectation_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.expectation_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_EXPECTATION_RESULT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.expectation_results_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">expectation_results_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.expectation_results_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All expectation results yielded by the solid</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"../solids/#dagster.ExpectationResult\" title=\"dagster.ExpectationResult\">ExpectationResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.failure_data\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">failure_data</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.failure_data\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Any data corresponding to this step\u2019s failure, if it\nfailed.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, StepFailureData]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.get_output_event_for_compute\">\n<code class=\"sig-name descname\">get_output_event_for_compute</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">output_name='result'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#SolidExecutionResult.get_output_event_for_compute\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_output_event_for_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code> event for the given output name.</p>\n<p>Throws if not present.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the output. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The corresponding event.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.get_step_success_event\">\n<code class=\"sig-name descname\">get_step_success_event</code><span class=\"sig-paren\">(</span><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#SolidExecutionResult.get_step_success_event\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.get_step_success_event\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>DagsterEvent: The <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_SUCCESS</span></code> event, throws if not present.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.input_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">input_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.input_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_INPUT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.materialization_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">materialization_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.materialization_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_MATERIALIZATION</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.materializations_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">materializations_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.materializations_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All materializations yielded by the solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"../solids/#dagster.Materialization\" title=\"dagster.Materialization\">Materialization</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.output_events_during_compute\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">output_events_during_compute</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_events_during_compute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>All events of type <code class=\"docutils literal notranslate\"><span class=\"pre\">STEP_OUTPUT</span></code>.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[<a class=\"reference internal\" href=\"#dagster.DagsterEvent\" title=\"dagster.DagsterEvent\">DagsterEvent</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.output_value\">\n<code class=\"sig-name descname\">output_value</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">output_name='result'</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#SolidExecutionResult.output_value\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_value\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get a computed output value.</p>\n<p>Note that calling this method will reconstruct the pipeline context (including, e.g.,\nresources) to retrieve materialized output values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>output_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The output name for which to retrieve the value. (default: \u2018result\u2019)</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if execution did not succeed, otherwise the output value.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, Any]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.output_values\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">output_values</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.output_values\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The computed output values.</p>\n<p>Keys of this dictionary are output names, values are output values.</p>\n<p>Returns <code class=\"docutils literal notranslate\"><span class=\"pre\">None</span></code> if execution did not succeed.</p>\n<p>Note that accessing this property will reconstruct the pipeline context (including, e.g.,\nresources) to retrieve materialized output values.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference external\" href=\"https://docs.python.org/3/library/constants.html#None\" title=\"(in Python v3.8)\">None</a>, Dict[<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\">str</a>, Any]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.skipped\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">skipped</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.skipped\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether solid execution was skipped.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.SolidExecutionResult.success\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">success</code><a class=\"headerlink\" href=\"#dagster.SolidExecutionResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether solid execution was successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.CompositeSolidExecutionResult\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">CompositeSolidExecutionResult</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">solid</em>, <em class=\"sig-param\">handle</em>, <em class=\"sig-param\">event_list</em>, <em class=\"sig-param\">step_events_by_kind</em>, <em class=\"sig-param\">reconstruct_context</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#CompositeSolidExecutionResult\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Execution result for a composite solid in a pipeline.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.result_for_handle\">\n<code class=\"sig-name descname\">result_for_handle</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">handle</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#CompositeSolidExecutionResult.result_for_handle\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.result_for_handle\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a solid by its solid handle string.</p>\n<p>This allows indexing into top-level solids to retrieve the results of children of\ncomposite solids.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>handle</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The string handle for the solid.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The result of the given solid.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.result_for_solid\">\n<code class=\"sig-name descname\">result_for_solid</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">name</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/results/#CompositeSolidExecutionResult.result_for_solid\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.result_for_solid\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Get the result of a top level solid in the composite solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the top-level solid or aliased solid for which to retrieve the\nresult.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p><dl class=\"simple\">\n<dt>The result of the solid</dt><dd><p>execution within the composite solid.</p>\n</dd>\n</dl>\n</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.solid_result_list\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">solid_result_list</code><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.solid_result_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The results for each\ntop level solid.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p>List[Union[<a class=\"reference internal\" href=\"#dagster.CompositeSolidExecutionResult\" title=\"dagster.CompositeSolidExecutionResult\">CompositeSolidExecutionResult</a>, <a class=\"reference internal\" href=\"#dagster.SolidExecutionResult\" title=\"dagster.SolidExecutionResult\">SolidExecutionResult</a>]]</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.step_event_list\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">step_event_list</code><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.step_event_list\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>List[DagsterEvent] The full list of events generated by steps in the composite solid\nexecution.</p>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.CompositeSolidExecutionResult.success\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">success</code><a class=\"headerlink\" href=\"#dagster.CompositeSolidExecutionResult.success\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Whether all steps in the composite solid execution were successful.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference external\" href=\"https://docs.python.org/3/library/functions.html#bool\" title=\"(in Python v3.8)\">bool</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.DagsterEvent\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterEvent</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/events/#DagsterEvent\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterEvent\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Events yielded by solid and pipeline execution.</p>\n<p>Users should not instantiate this class.</p>\n<dl class=\"method\">\n<dt id=\"dagster.DagsterEvent.event_type\">\n<em class=\"property\">property </em><code class=\"sig-name descname\">event_type</code><a class=\"headerlink\" href=\"#dagster.DagsterEvent.event_type\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The type of this event.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.DagsterEventType\" title=\"dagster.DagsterEventType\">DagsterEventType</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"class\">\n<dt id=\"dagster.DagsterEventType\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterEventType</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/events/#DagsterEventType\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterEventType\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The types of events that may be yielded by solid and pipeline execution.</p>\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.ENGINE_EVENT\">\n<code class=\"sig-name descname\">ENGINE_EVENT</code><em class=\"property\"> = 'ENGINE_EVENT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.ENGINE_EVENT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.OBJECT_STORE_OPERATION\">\n<code class=\"sig-name descname\">OBJECT_STORE_OPERATION</code><em class=\"property\"> = 'OBJECT_STORE_OPERATION'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.OBJECT_STORE_OPERATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_FAILURE\">\n<code class=\"sig-name descname\">PIPELINE_FAILURE</code><em class=\"property\"> = 'PIPELINE_FAILURE'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_INIT_FAILURE\">\n<code class=\"sig-name descname\">PIPELINE_INIT_FAILURE</code><em class=\"property\"> = 'PIPELINE_INIT_FAILURE'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_INIT_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_PROCESS_EXITED\">\n<code class=\"sig-name descname\">PIPELINE_PROCESS_EXITED</code><em class=\"property\"> = 'PIPELINE_PROCESS_EXITED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_PROCESS_EXITED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_PROCESS_START\">\n<code class=\"sig-name descname\">PIPELINE_PROCESS_START</code><em class=\"property\"> = 'PIPELINE_PROCESS_START'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_PROCESS_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_PROCESS_STARTED\">\n<code class=\"sig-name descname\">PIPELINE_PROCESS_STARTED</code><em class=\"property\"> = 'PIPELINE_PROCESS_STARTED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_PROCESS_STARTED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_START\">\n<code class=\"sig-name descname\">PIPELINE_START</code><em class=\"property\"> = 'PIPELINE_START'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.PIPELINE_SUCCESS\">\n<code class=\"sig-name descname\">PIPELINE_SUCCESS</code><em class=\"property\"> = 'PIPELINE_SUCCESS'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.PIPELINE_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_EXPECTATION_RESULT\">\n<code class=\"sig-name descname\">STEP_EXPECTATION_RESULT</code><em class=\"property\"> = 'STEP_EXPECTATION_RESULT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_EXPECTATION_RESULT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_FAILURE\">\n<code class=\"sig-name descname\">STEP_FAILURE</code><em class=\"property\"> = 'STEP_FAILURE'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_FAILURE\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_INPUT\">\n<code class=\"sig-name descname\">STEP_INPUT</code><em class=\"property\"> = 'STEP_INPUT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_INPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_MATERIALIZATION\">\n<code class=\"sig-name descname\">STEP_MATERIALIZATION</code><em class=\"property\"> = 'STEP_MATERIALIZATION'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_MATERIALIZATION\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_OUTPUT\">\n<code class=\"sig-name descname\">STEP_OUTPUT</code><em class=\"property\"> = 'STEP_OUTPUT'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_OUTPUT\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_SKIPPED\">\n<code class=\"sig-name descname\">STEP_SKIPPED</code><em class=\"property\"> = 'STEP_SKIPPED'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_SKIPPED\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_START\">\n<code class=\"sig-name descname\">STEP_START</code><em class=\"property\"> = 'STEP_START'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_START\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"attribute\">\n<dt id=\"dagster.DagsterEventType.STEP_SUCCESS\">\n<code class=\"sig-name descname\">STEP_SUCCESS</code><em class=\"property\"> = 'STEP_SUCCESS'</em><a class=\"headerlink\" href=\"#dagster.DagsterEventType.STEP_SUCCESS\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"pipeline-configuration\">\n<h2>Pipeline configuration<a class=\"headerlink\" href=\"#pipeline-configuration\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<div class=\"section\" id=\"environment-dict-schema\">\n<span id=\"config-schema\"></span><h3>Environment Dict Schema<a class=\"headerlink\" href=\"#environment-dict-schema\" title=\"Permalink to this headline\">\u00b6</a></h3>\n<blockquote>\n<div><p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">environment_dict</span></code> used by <a class=\"reference internal\" href=\"#dagster.execute_pipeline\" title=\"dagster.execute_pipeline\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline()</span></code></a> and\n<a class=\"reference internal\" href=\"#dagster.execute_pipeline_iterator\" title=\"dagster.execute_pipeline_iterator\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">execute_pipeline_iterator()</span></code></a> has the following schema:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">{</span>\n  <span class=\"c1\"># configuration for execution, required if executors require config</span>\n  <span class=\"n\">execution</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of one, and only one available executor, typically &#39;in_process&#39; or &#39;multiprocess&#39;</span>\n    <span class=\"n\">__executor_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># executor-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for loggers, required if loggers require config</span>\n  <span class=\"n\">loggers</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of an available logger</span>\n    <span class=\"n\">__logger_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># logger-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for resources, required if resources require config</span>\n  <span class=\"n\">resources</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of a resource</span>\n    <span class=\"n\">__resource_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"c1\"># resource-specific config, if required or permitted</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"o\">...</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># configuration for solids, required if solids require config</span>\n  <span class=\"n\">solids</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n    <span class=\"c1\"># these keys align with the names of the solids, or their alias in this pipeline</span>\n    <span class=\"n\">__solid_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n\n      <span class=\"c1\"># pass any data that was defined via config_field</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"o\">...</span><span class=\"p\">,</span>\n\n      <span class=\"c1\"># configurably specify input values, keyed by input name</span>\n      <span class=\"n\">inputs</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"n\">__input_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\"># if an input_hydration_config is specified, that schema must be satisfied here;</span>\n          <span class=\"c1\"># scalar, built-in types will generally allow their values to be specified directly:</span>\n          <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"o\">...</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">},</span>\n\n      <span class=\"c1\"># configurably materialize output values</span>\n      <span class=\"n\">outputs</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"n\">__output_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n          <span class=\"c1\"># if an output_materialization_config is specified, that schema must be satisfied</span>\n          <span class=\"c1\"># here; pickleable types will generally allow output as follows:</span>\n          <span class=\"n\">pickle</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Path</span>\n          <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"c1\"># optionally use an available system storage for intermediates etc.</span>\n  <span class=\"n\">storage</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"c1\"># the name of one, and only one available system storage, typically &#39;filesystem&#39; or</span>\n    <span class=\"c1\"># &#39;in_memory&#39;</span>\n    <span class=\"n\">__storage_name__</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"n\">config</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"o\">...</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre></div>\n</div>\n</div></blockquote>\n<dl class=\"class\">\n<dt id=\"dagster.RunConfig\">\n<em class=\"property\">class </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">RunConfig</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/config/#RunConfig\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RunConfig\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Configuration for pipeline execution.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>run_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The ID to use for this run. If not provided a new UUID will\nbe created (using <code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">uuid4.uuid4</span></code>).</p></li>\n<li><p><strong>tags</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>, </em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 Key value pairs that will be added to logs.</p></li>\n<li><p><strong>rexecution_config</strong> (<em>Optional</em><em>[</em><em>RexecutionConfig</em><em>]</em>) \u2013 Information about a previous run to allow\nfor subset rexecution.</p></li>\n<li><p><strong>step_keys_to_execute</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#list\" title=\"(in Python v3.8)\"><em>list</em></a><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em><em>]</em>) \u2013 The subset of steps from a pipeline to execute\nthis run.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The name of the mode in which to execute the pipeline.</p></li>\n</ul>\n</dd>\n</dl>\n<dl class=\"method\">\n<dt id=\"dagster.RunConfig.with_mode\">\n<code class=\"sig-name descname\">with_mode</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">mode</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/config/#RunConfig.with_mode\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RunConfig.with_mode\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extend an existing RunConfig with a different mode.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>mode</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The new mode to use.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The extended RunConfig.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\">RunConfig</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.RunConfig.with_step_keys_to_execute\">\n<code class=\"sig-name descname\">with_step_keys_to_execute</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">step_keys_to_execute</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/config/#RunConfig.with_step_keys_to_execute\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RunConfig.with_step_keys_to_execute\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extend an existing run config with different step keys to execute.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>step_keys_to_execute</strong> (<em>List</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The step keys to execute.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The extended RunConfig.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\">RunConfig</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"method\">\n<dt id=\"dagster.RunConfig.with_tags\">\n<code class=\"sig-name descname\">with_tags</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">**new_tags</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/execution/config/#RunConfig.with_tags\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.RunConfig.with_tags\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Extend an existing RunConfig with additional logging tags.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><p><strong>**new_tags</strong> \u2013 Values should be strings. The logging tags to add.</p>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The extended RunConfig.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p><a class=\"reference internal\" href=\"#dagster.RunConfig\" title=\"dagster.RunConfig\">RunConfig</a></p>\n</dd>\n</dl>\n</dd></dl>\n\n</dd></dl>\n\n</div>\n</div>\n<div class=\"section\" id=\"system-storage\">\n<h2>System Storage<a class=\"headerlink\" href=\"#system-storage\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster.mem_system_storage\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">mem_system_storage</code><em class=\"property\"> SystemStorageDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/system_storage/#mem_system_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.mem_system_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default in-memory system storage.</p>\n<p>In most Dagster environments, this will be the default system storage. It is available by\ndefault on any <a class=\"reference internal\" href=\"../pipeline/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide custom system storages. To\nselect it explicitly, include the following top-level fragment in config:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">in_memory</span><span class=\"p\">:</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.fs_system_storage\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">fs_system_storage</code><em class=\"property\"> SystemStorageDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/storage/system_storage/#fs_system_storage\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.fs_system_storage\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default filesystem system storage.</p>\n<p>Filesystem system storage is available by default on any <a class=\"reference internal\" href=\"../pipeline/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does\nnot provide custom system storages. To select it, include a fragment such as the following in\nconfig:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">storage</span><span class=\"p\">:</span>\n  <span class=\"nt\">filesystem</span><span class=\"p\">:</span>\n    <span class=\"nt\">base_dir</span><span class=\"p\">:</span> <span class=\"s\">&#39;/path/to/dir/&#39;</span>\n</pre></div>\n</div>\n<p>You may omit the <code class=\"docutils literal notranslate\"><span class=\"pre\">base_dir</span></code> config value, in which case the filesystem storage will use\nthe <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInstance</span></code>-provided default.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.default_system_storage_defs\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">default_system_storage_defs</code><em class=\"property\"> List[SystemStorageDefinition]</em><a class=\"headerlink\" href=\"#dagster.default_system_storage_defs\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in mutable sequence.</p>\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.\nThe default system storages available on any <a class=\"reference internal\" href=\"../pipeline/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide\ncustom system storages. These are currently [<a class=\"reference internal\" href=\"#dagster.mem_system_storage\" title=\"dagster.mem_system_storage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">mem_system_storage</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.fs_system_storage\" title=\"dagster.fs_system_storage\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">fs_system_storage</span></code></a>].</p>\n</dd></dl>\n\n</div>\n<div class=\"section\" id=\"executors\">\n<h2>Executors<a class=\"headerlink\" href=\"#executors\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<dl class=\"data\">\n<dt id=\"dagster.in_process_executor\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">in_process_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor/#in_process_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.in_process_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default in-process executor.</p>\n<p>In most Dagster environments, this will be the default executor. It is available by default on\nany <a class=\"reference internal\" href=\"../pipeline/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide custom executors. To select it explicitly,\ninclude the following top-level fragment in config:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">in_process</span><span class=\"p\">:</span>\n</pre></div>\n</div>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.multiprocess_executor\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">multiprocess_executor</code><em class=\"property\"> ExecutorDefinition</em><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/definitions/executor/#multiprocess_executor\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.multiprocess_executor\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>The default multiprocess executor.</p>\n<p>This simple multiprocess executor is available by default on any <a class=\"reference internal\" href=\"../pipeline/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a>\nthat does not provide custom executors. To select the multiprocess executor, include a fragment\nsuch as the following in your config:</p>\n<div class=\"highlight-yaml notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"nt\">execution</span><span class=\"p\">:</span>\n  <span class=\"nt\">multiprocess</span><span class=\"p\">:</span>\n    <span class=\"nt\">max_concurrent</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">4</span>\n</pre></div>\n</div>\n<p>The <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> arg is optional and tells the execution engine how many processes may run\nconcurrently. By default, or if you set <code class=\"docutils literal notranslate\"><span class=\"pre\">max_concurrent</span></code> to be 0, this is the return value of\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/multiprocessing.html#multiprocessing.cpu_count\" title=\"(in Python v3.8)\"><code class=\"docutils literal notranslate\"><span class=\"pre\">multiprocessing.cpu_count()</span></code></a>.</p>\n</dd></dl>\n\n<dl class=\"data\">\n<dt id=\"dagster.default_executors\">\n<code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">default_executors</code><em class=\"property\"> List[ExecutorDefinition]</em><a class=\"headerlink\" href=\"#dagster.default_executors\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Built-in mutable sequence.</p>\n<p>If no argument is given, the constructor creates a new empty list.\nThe argument must be an iterable if specified.\nThe default executors available on any <a class=\"reference internal\" href=\"../pipeline/#dagster.ModeDefinition\" title=\"dagster.ModeDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ModeDefinition</span></code></a> that does not provide custom\nexecutors. These are currently [<a class=\"reference internal\" href=\"#dagster.in_process_executor\" title=\"dagster.in_process_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">in_process_executor</span></code></a>,\n<a class=\"reference internal\" href=\"#dagster.multiprocess_executor\" title=\"dagster.multiprocess_executor\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">multiprocess_executor</span></code></a>].</p>\n</dd></dl>\n\n</div>\n</div>\n",
  "metatags": "",
  "rellinks": [
    ["genindex", "General Index", "I", "index"],
    ["py-modindex", "Python Module Index", "", "modules"],
    ["sections/api/apidocs/types", "Types", "N", "next"],
    ["sections/api/apidocs/pipeline", "Pipelines", "P", "previous"]
  ],
  "sourcename": "sections/api/apidocs/execution.rst.txt",
  "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Execution</a><ul>\n<li><a class=\"reference internal\" href=\"#executing-pipelines\">Executing pipelines</a></li>\n<li><a class=\"reference internal\" href=\"#executing-solids\">Executing solids</a></li>\n<li><a class=\"reference internal\" href=\"#execution-context\">Execution context</a></li>\n<li><a class=\"reference internal\" href=\"#pipeline-and-solid-results\">Pipeline and solid results</a></li>\n<li><a class=\"reference internal\" href=\"#pipeline-configuration\">Pipeline configuration</a><ul>\n<li><a class=\"reference internal\" href=\"#environment-dict-schema\">Environment Dict Schema</a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#system-storage\">System Storage</a></li>\n<li><a class=\"reference internal\" href=\"#executors\">Executors</a></li>\n</ul>\n</li>\n</ul>\n",
  "display_toc": true,
  "page_source_suffix": ".rst",
  "current_page_name": "sections/api/apidocs/execution",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
