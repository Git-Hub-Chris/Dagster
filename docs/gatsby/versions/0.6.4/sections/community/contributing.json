{
  "parents": [{ "link": "../community/", "title": "Community" }],
  "prev": { "link": "../code_of_conduct/", "title": "Code of Conduct" },
  "next": null,
  "title": "Contributing",
  "meta": {},
  "body": "<div class=\"section\" id=\"contributing\">\n<span id=\"id1\"></span><h1>Contributing<a class=\"headerlink\" href=\"#contributing\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>If you are planning to contribute to Dagster, you will first need to set up a local development\nenvironment.</p>\n<div class=\"section\" id=\"environment-setup\">\n<h2>Environment Setup<a class=\"headerlink\" href=\"#environment-setup\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<ol class=\"arabic simple\">\n<li><p>Install Python. Python 3.6 or above recommended, but our CI/CD pipeline currently tests against\nup-to-date patch versions of Python 2.7, 3.5, 3.6, and 3.7. Note that dagster is a 2/3 compatible\nproject: tests must pass against Python 2.7.</p></li>\n<li><p>Create and activate a virtualenv, using the tool of your choice. E.g., on macOS you may use\ninstall and use <code class=\"docutils literal notranslate\"><span class=\"pre\">pyenv</span></code> as follows with Homebrew:</p></li>\n</ol>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> brew install pyenv pyenv-virtualenv\n<span class=\"gp\">$</span> pyenv install <span class=\"m\">3</span>.7.4\n<span class=\"gp\">$</span> pyenv virtualenv <span class=\"m\">3</span>.7.4 dagster37\n<span class=\"gp\">$</span> pyenv activate dagster37\n</pre></div>\n</div>\n<ol class=\"arabic simple\" start=\"3\">\n<li><p>Ensure that you have node installed by running <cite>node -v</cite>, and that you have\n<a class=\"reference external\" href=\"https://yarnpkg.com/lang/en/\">yarn</a> installed. If you are on macOS, you can install yarn with\nHomebrew:</p></li>\n</ol>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> brew install yarn\n</pre></div>\n</div>\n<ol class=\"arabic simple\" start=\"4\">\n<li><p>Clone the dagster repository to the destination of your choice:</p></li>\n</ol>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> git clone git@github.com:dagster-io/dagster.git\n</pre></div>\n</div>\n<ol class=\"arabic simple\" start=\"5\">\n<li><p>Run <code class=\"docutils literal notranslate\"><span class=\"pre\">make</span> <span class=\"pre\">dev_install</span></code> at the root of the repository. This sets up a full dagster developer\nenvironment with all modules and runs tests that do not require heavy external dependencies\nsuch as docker. This will take a few minutes.</p></li>\n</ol>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> make dev_install\n</pre></div>\n</div>\n<ol class=\"arabic simple\" start=\"6\">\n<li><p>Run some tests manually to make sure things are working:</p></li>\n</ol>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> python -m pytest python_modules/dagster/dagster_tests\n</pre></div>\n</div>\n</div>\n<div class=\"section\" id=\"developing-dagster\">\n<h2>Developing Dagster<a class=\"headerlink\" href=\"#developing-dagster\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Some notes on developing in Dagster:</p>\n<ul class=\"simple\">\n<li><p><strong>Python 2</strong>: We plan to continue supporting Python 2 for some time; it is worth testing your\nchanges with Python 2 to ensure compatibility. You can use <cite>tox</cite> for this, from within any of\nthe Python packages:</p></li>\n</ul>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> <span class=\"nv\">PYENV</span><span class=\"o\">=</span>py27 tox\n</pre></div>\n</div>\n<ul class=\"simple\">\n<li><p><strong>Black/Pylint</strong>: We use <a class=\"reference external\" href=\"https://github.com/python/black\">black</a> to enforce a consistent code\nstyle, along with <a class=\"reference external\" href=\"https://www.pylint.org/\">pylint</a>. We test these in our CI/CD pipeline.</p></li>\n<li><p><strong>Line Width</strong>: We use a line width of 100.</p></li>\n<li><p><strong>IDE</strong>: We recommend setting up your IDE to format with black on save and check pylint,\nbut you can always run <code class=\"docutils literal notranslate\"><span class=\"pre\">make</span> <span class=\"pre\">black</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">make</span> <span class=\"pre\">pylint</span></code> in the root Dagster directory before\nsubmitting a pull request. If you\u2019re also using VS Code, you can see what we\u2019re using for our\n<code class=\"docutils literal notranslate\"><span class=\"pre\">settings.json</span></code> <a class=\"reference external\" href=\"https://gist.github.com/natekupp/7a17a9df8d2064e5389cc84aa118a896\">here</a>.</p></li>\n</ul>\n</div>\n<div class=\"section\" id=\"developing-dagit\">\n<h2>Developing Dagit<a class=\"headerlink\" href=\"#developing-dagit\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>For development, run the dagit GraphQL server on a different port than the webapp, from any\ndirectory that contains a repository.yaml file. For example:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> <span class=\"nb\">cd</span> dagster/examples/dagster_examples/intro_tutorial\n<span class=\"gp\">$</span> dagit -p <span class=\"m\">3333</span>\n</pre></div>\n</div>\n<p>Keep this running. Then, in another terminal, run the local development\n(autoreloading, etc.) version of the webapp:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> <span class=\"nb\">cd</span> dagster/js_modules/dagit\n<span class=\"gp\">$</span> make dev_webapp\n</pre></div>\n</div>\n<p>To run JavaScript tests for the dagit frontend, you can run:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> <span class=\"nb\">cd</span> dagster/js_modules/dagit\n<span class=\"gp\">$</span> yarn <span class=\"nb\">test</span>\n</pre></div>\n</div>\n<p>In webapp development it\u2019s handy to run <code class=\"docutils literal notranslate\"><span class=\"pre\">yarn</span> <span class=\"pre\">run</span> <span class=\"pre\">jest</span> <span class=\"pre\">--watch</span></code> to have an interactive test\nrunner.</p>\n<p>Some webapp tests use snapshots\u2013auto-generated results to which the test render tree is compared.\nThose tests are supposed to break when you change something.</p>\n<p>Check that the change is sensible and run <code class=\"docutils literal notranslate\"><span class=\"pre\">yarn</span> <span class=\"pre\">run</span> <span class=\"pre\">jest</span> <span class=\"pre\">-u</span></code> to update the snapshot to the new\nresult. You can also update snapshots interactively when you are in <code class=\"docutils literal notranslate\"><span class=\"pre\">--watch</span></code> mode.</p>\n</div>\n<div class=\"section\" id=\"developing-docs\">\n<h2>Developing Docs<a class=\"headerlink\" href=\"#developing-docs\" title=\"Permalink to this headline\">\u00b6</a></h2>\n<p>Running a live html version of the docs can expedite documentation development:</p>\n<div class=\"highlight-console notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">$</span> <span class=\"nb\">cd</span> docs\n<span class=\"gp\">$</span> make livehtml\n</pre></div>\n</div>\n<p>Our documentation employs a combination of Markdown and reStructuredText.</p>\n</div>\n</div>\n",
  "metatags": "",
  "rellinks": [
    ["genindex", "General Index", "I", "index"],
    ["py-modindex", "Python Module Index", "", "modules"],
    ["sections/community/code_of_conduct", "Code of Conduct", "P", "previous"]
  ],
  "sourcename": "sections/community/contributing.rst.txt",
  "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Contributing</a><ul>\n<li><a class=\"reference internal\" href=\"#environment-setup\">Environment Setup</a></li>\n<li><a class=\"reference internal\" href=\"#developing-dagster\">Developing Dagster</a></li>\n<li><a class=\"reference internal\" href=\"#developing-dagit\">Developing Dagit</a></li>\n<li><a class=\"reference internal\" href=\"#developing-docs\">Developing Docs</a></li>\n</ul>\n</li>\n</ul>\n",
  "display_toc": true,
  "page_source_suffix": ".rst",
  "current_page_name": "sections/community/contributing",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
