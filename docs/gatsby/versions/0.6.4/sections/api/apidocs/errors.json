{
  "parents": [{ "link": "../../api/", "title": "API Docs" }],
  "prev": { "link": "../types/", "title": "Types" },
  "next": { "link": "../utilities/", "title": "Utilities" },
  "title": "Errors",
  "meta": {},
  "body": "<div class=\"section\" id=\"errors\">\n<h1>Errors<a class=\"headerlink\" href=\"#errors\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>Core dagster error classes. All errors thrown by the Dagster framework inherit from\n<a class=\"reference internal\" href=\"#dagster.DagsterError\" title=\"dagster.DagsterError\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterError</span></code></a>. Users should not subclass this base class for their\nown exceptions.</p>\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Base class for all errors thrown by the Dagster framework.</p>\n<p>Users should not subclass this base class for their own exceptions.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterExecutionStepExecutionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterExecutionStepExecutionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterExecutionStepExecutionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterExecutionStepExecutionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error occured while executing the body of an execution step.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterExecutionStepNotFoundError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterExecutionStepNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterExecutionStepNotFoundError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterExecutionStepNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when the user specifies execution step keys that do not exist.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterInvalidConfigError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvalidConfigError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">preamble</em>, <em class=\"sig-param\">errors</em>, <em class=\"sig-param\">config_value</em>, <em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterInvalidConfigError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidConfigError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when provided config is invalid (does not type check against the relevant config\nschema).</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt>\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterExecutionStepExecutionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterExecutionStepExecutionError\"><span class=\"viewcode-link\">[source]</span></a></dt>\n<dd><p>Indicates an error occured while executing the body of an execution step.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt>\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterExecutionStepNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterExecutionStepNotFoundError\"><span class=\"viewcode-link\">[source]</span></a></dt>\n<dd><p>Thrown when the user specifies execution step keys that do not exist.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt>\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvalidConfigError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">preamble</em>, <em class=\"sig-param\">errors</em>, <em class=\"sig-param\">config_value</em>, <em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterInvalidConfigError\"><span class=\"viewcode-link\">[source]</span></a></dt>\n<dd><p>Thrown when provided config is invalid (does not type check against the relevant config\nschema).</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterInvalidDefinitionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvalidDefinitionError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterInvalidDefinitionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvalidDefinitionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that the rules for a definition have been violated by the user.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterInvariantViolationError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterInvariantViolationError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterInvariantViolationError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterInvariantViolationError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates the user has violated a well-defined invariant that can only be enforced\nat runtime.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterResourceFunctionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterResourceFunctionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterResourceFunctionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterResourceFunctionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error occured while executing the body of the <code class=\"docutils literal notranslate\"><span class=\"pre\">resource_fn</span></code> in a\n<a class=\"reference internal\" href=\"../pipeline/#dagster.ResourceDefinition\" title=\"dagster.ResourceDefinition\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">ResourceDefinition</span></code></a> during resource initialization.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterRunNotFoundError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterRunNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterRunNotFoundError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterRunNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Thrown when re-execution is attempted but the original run cannot be found.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterStepOutputNotFoundError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterStepOutputNotFoundError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterStepOutputNotFoundError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterStepOutputNotFoundError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates that previous step outputs required for an execution step to proceed are not\navailable.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterTypeCheckError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterTypeCheckError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterTypeCheckError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterTypeCheckError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates an error in the solid type system at runtime. E.g. a solid receives an\nunexpected input, or produces an output that does not match the type of the output definition.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterUnmetExecutorRequirementsError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterUnmetExecutorRequirementsError</code><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterUnmetExecutorRequirementsError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterUnmetExecutorRequirementsError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Indicates the resolved executor is incompatible with the state of other systems\nsuch as the <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DagsterInstance</span></code> or system storage configuration.</p>\n</dd></dl>\n\n<dl class=\"exception\">\n<dt id=\"dagster.DagsterUserCodeExecutionError\">\n<em class=\"property\">exception </em><code class=\"sig-prename descclassname\">dagster.</code><code class=\"sig-name descname\">DagsterUserCodeExecutionError</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">*args</em>, <em class=\"sig-param\">**kwargs</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster/core/errors/#DagsterUserCodeExecutionError\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster.DagsterUserCodeExecutionError\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>This is the base class for any exception that is meant to wrap an\n<a class=\"reference external\" href=\"https://docs.python.org/3/library/exceptions.html#Exception\" title=\"(in Python v3.8)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">Exception</span></code></a> thrown by user code. It wraps that existing user code.\nThe <code class=\"docutils literal notranslate\"><span class=\"pre\">original_exc_info</span></code> argument to the constructor is meant to be a tuple of the type\nreturned by <a class=\"reference external\" href=\"https://docs.python.org/3/library/sys.html#sys.exc_info\" title=\"(in Python v3.8)\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">sys.exc_info</span></code></a> at the call site of the constructor.</p>\n</dd></dl>\n\n</div>\n",
  "metatags": "",
  "rellinks": [
    ["genindex", "General Index", "I", "index"],
    ["py-modindex", "Python Module Index", "", "modules"],
    ["sections/api/apidocs/utilities", "Utilities", "N", "next"],
    ["sections/api/apidocs/types", "Types", "P", "previous"]
  ],
  "sourcename": "sections/api/apidocs/errors.rst.txt",
  "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Errors</a></li>\n</ul>\n",
  "display_toc": false,
  "page_source_suffix": ".rst",
  "current_page_name": "sections/api/apidocs/errors",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
