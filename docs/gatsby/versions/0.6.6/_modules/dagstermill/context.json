{
  "parents": [{ "link": "../../", "title": "Module code" }],
  "title": "dagstermill.context",
  "body": "<h1>Source code for dagstermill.context</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">check</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster.core.execution.context.compute</span> <span class=\"kn\">import</span> <span class=\"n\">AbstractComputeExecutionContext</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster.core.execution.context.system</span> <span class=\"kn\">import</span> <span class=\"n\">SystemPipelineExecutionContext</span>\n\n\n<div class=\"viewcode-block\" id=\"DagstermillExecutionContext\"><a class=\"viewcode-back\" href=\"../../../sections/api/apidocs/dagstermill/#dagstermill.DagstermillExecutionContext\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">DagstermillExecutionContext</span><span class=\"p\">(</span><span class=\"n\">AbstractComputeExecutionContext</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Dagstermill-specific execution context.</span>\n\n<span class=\"sd\">    Do not initialize directly: use :func:`dagstermill.get_context`.</span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">pipeline_context</span><span class=\"p\">,</span> <span class=\"n\">resource_keys_to_init</span><span class=\"p\">,</span> <span class=\"n\">solid_config</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">inst_param</span><span class=\"p\">(</span><span class=\"n\">pipeline_context</span><span class=\"p\">,</span> <span class=\"s1\">&#39;pipeline_context&#39;</span><span class=\"p\">,</span> <span class=\"n\">SystemPipelineExecutionContext</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span> <span class=\"o\">=</span> <span class=\"n\">pipeline_context</span>\n        <span class=\"k\">if</span> <span class=\"n\">solid_config</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solid_config</span> <span class=\"o\">=</span> <span class=\"n\">solid_config</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solid_config</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_keys_to_init</span> <span class=\"o\">=</span> <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">set_param</span><span class=\"p\">(</span>\n            <span class=\"n\">resource_keys_to_init</span><span class=\"p\">,</span> <span class=\"s1\">&#39;resource_keys_to_init&#39;</span><span class=\"p\">,</span> <span class=\"n\">of_type</span><span class=\"o\">=</span><span class=\"nb\">str</span>\n        <span class=\"p\">)</span>\n\n<div class=\"viewcode-block\" id=\"DagstermillExecutionContext.has_tag\"><a class=\"viewcode-back\" href=\"../../../sections/api/apidocs/dagstermill/#dagstermill.DagstermillExecutionContext.has_tag\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">has_tag</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Check if a logging tag is defined on the context.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            key (str): The key to check.</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            bool</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">has_tag</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span></div>\n\n<div class=\"viewcode-block\" id=\"DagstermillExecutionContext.get_tag\"><a class=\"viewcode-back\" href=\"../../../sections/api/apidocs/dagstermill/#dagstermill.DagstermillExecutionContext.get_tag\">[docs]</a>    <span class=\"k\">def</span> <span class=\"nf\">get_tag</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;Get a logging tag defined on the context.</span>\n\n<span class=\"sd\">        Args:</span>\n<span class=\"sd\">            key (str): The key to get.</span>\n\n<span class=\"sd\">        Returns:</span>\n<span class=\"sd\">            str</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">get_tag</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">)</span></div>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">run_id</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;str: The run_id for the context.&#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">run_id</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">environment_dict</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;dict: The environment_dict for the context.&#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">environment_dict</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">environment_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;:class:`dagster.EnvironmentConfig`: The environment_config for the context&#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">environment_config</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">logging_tags</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;dict: The logging tags for the context.&#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">logging_tags</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pipeline_def</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;:class:`dagster.PipelineDefinition`: The pipeline definition for the context.</span>\n\n<span class=\"sd\">        This will be a dagstermill-specific shim.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">pipeline_def</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">resources</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;collections.namedtuple: A dynamically-created type whose properties allow access to</span>\n<span class=\"sd\">        resources.&#39;&#39;&#39;</span>\n        <span class=\"kn\">from</span> <span class=\"nn\">dagster.core.definitions</span> <span class=\"kn\">import</span> <span class=\"n\">SolidInvocation</span>\n\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">scoped_resources_builder</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span>\n            <span class=\"n\">mapper_fn</span><span class=\"o\">=</span><span class=\"n\">SolidInvocation</span><span class=\"o\">.</span><span class=\"n\">default_resource_mapper_fn</span><span class=\"p\">,</span>\n            <span class=\"n\">required_resource_keys</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_resource_keys_to_init</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">pipeline_run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;:class:`dagster.PipelineRun`: The pipeline run for the context.&#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">pipeline_run</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">log</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;:class:`dagster.LogManager`: The log manager for the context.</span>\n\n<span class=\"sd\">        Call, e.g., ``log.info()`` to log messages through the Dagster machinery.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_pipeline_context</span><span class=\"o\">.</span><span class=\"n\">log</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solid_def</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;:class:`dagster.SolidDefinition`: The solid definition for the context.</span>\n\n<span class=\"sd\">        In interactive contexts, this may be a dagstermill-specific shim, depending whether a</span>\n<span class=\"sd\">        solid definition was passed to ``dagstermill.get_context``.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pipeline_def</span><span class=\"o\">.</span><span class=\"n\">all_solid_defs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solid</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;:class:`dagster.Solid`: The solid for the context.</span>\n\n<span class=\"sd\">        In interactive contexts, this may be a dagstermill-specific shim, depending whether a</span>\n<span class=\"sd\">        solid definition was passed to ``dagstermill.get_context``.</span>\n<span class=\"sd\">        &#39;&#39;&#39;</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">pipeline_def</span><span class=\"o\">.</span><span class=\"n\">solids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">solid_config</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">&#39;&#39;&#39;collections.namedtuple: A dynamically-created type whose properties allow access to</span>\n<span class=\"sd\">        solid-specific config.&#39;&#39;&#39;</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solid_config</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_solid_config</span>\n\n        <span class=\"n\">solid_config</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">environment_config</span><span class=\"o\">.</span><span class=\"n\">solids</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">solid</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">solid_config</span><span class=\"o\">.</span><span class=\"n\">config</span> <span class=\"k\">if</span> <span class=\"n\">solid_config</span> <span class=\"k\">else</span> <span class=\"kc\">None</span></div>\n</pre></div>",
  "current_page_name": "_modules/dagstermill/context",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
