{
  "parents": [{ "link": "../../", "title": "Module code" }],
  "title": "dagster_cron.cron_scheduler",
  "body": "<h1>Source code for dagster_cron.cron_scheduler</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">import</span> <span class=\"nn\">io</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">stat</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">six</span>\n<span class=\"kn\">from</span> <span class=\"nn\">crontab</span> <span class=\"kn\">import</span> <span class=\"n\">CronTab</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">DagsterInvariantViolationError</span><span class=\"p\">,</span> <span class=\"n\">check</span><span class=\"p\">,</span> <span class=\"n\">seven</span><span class=\"p\">,</span> <span class=\"n\">utils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster.core.scheduler</span> <span class=\"kn\">import</span> <span class=\"n\">ScheduleStatus</span><span class=\"p\">,</span> <span class=\"n\">Scheduler</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster.core.scheduler.storage</span> <span class=\"kn\">import</span> <span class=\"n\">ScheduleStorage</span>\n\n\n<div class=\"viewcode-block\" id=\"SystemCronScheduler\"><a class=\"viewcode-back\" href=\"../../../sections/api/apidocs/dagster_cron/#dagster_cron.SystemCronScheduler\">[docs]</a><span class=\"k\">class</span> <span class=\"nc\">SystemCronScheduler</span><span class=\"p\">(</span><span class=\"n\">Scheduler</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Scheduler class for system cron-backed scheduling.</span>\n\n<span class=\"sd\">    Pass this class as the ``scheduler`` argument to the :py:func:`@schedules &lt;dagster.schedules&gt;`</span>\n<span class=\"sd\">    API -- do not instantiate it directly.</span>\n<span class=\"sd\">    </span>\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">artifacts_dir</span><span class=\"p\">,</span> <span class=\"n\">schedule_storage</span><span class=\"p\">):</span>\n        <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">inst_param</span><span class=\"p\">(</span><span class=\"n\">schedule_storage</span><span class=\"p\">,</span> <span class=\"s1\">&#39;schedule_storage&#39;</span><span class=\"p\">,</span> <span class=\"n\">ScheduleStorage</span><span class=\"p\">)</span>\n        <span class=\"n\">check</span><span class=\"o\">.</span><span class=\"n\">str_param</span><span class=\"p\">(</span><span class=\"n\">artifacts_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;artifacts_dir&#39;</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span> <span class=\"o\">=</span> <span class=\"n\">schedule_storage</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_artifacts_dir</span> <span class=\"o\">=</span> <span class=\"n\">artifacts_dir</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">all_schedules</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span><span class=\"o\">.</span><span class=\"n\">all_schedules</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_schedule_by_name</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span><span class=\"o\">.</span><span class=\"n\">get_schedule_by_name</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">start_schedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule_name</span><span class=\"p\">):</span>\n        <span class=\"n\">schedule</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_schedule_by_name</span><span class=\"p\">(</span><span class=\"n\">schedule_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">schedule</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">DagsterInvariantViolationError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;You have attempted to start schedule </span><span class=\"si\">{name}</span><span class=\"s1\">, but it does not exist.&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">schedule_name</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"n\">ScheduleStatus</span><span class=\"o\">.</span><span class=\"n\">RUNNING</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">DagsterInvariantViolationError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;You have attempted to start schedule </span><span class=\"si\">{name}</span><span class=\"s1\">, but it is already running&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">schedule_name</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">started_schedule</span> <span class=\"o\">=</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">with_status</span><span class=\"p\">(</span><span class=\"n\">ScheduleStatus</span><span class=\"o\">.</span><span class=\"n\">RUNNING</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span><span class=\"o\">.</span><span class=\"n\">update_schedule</span><span class=\"p\">(</span><span class=\"n\">started_schedule</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_start_cron_job</span><span class=\"p\">(</span><span class=\"n\">started_schedule</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">started_schedule</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">stop_schedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule_name</span><span class=\"p\">):</span>\n        <span class=\"n\">schedule</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_schedule_by_name</span><span class=\"p\">(</span><span class=\"n\">schedule_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">schedule</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">DagsterInvariantViolationError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;You have attempted to stop schedule </span><span class=\"si\">{name}</span><span class=\"s1\">, but was never initialized.&#39;</span>\n                <span class=\"s1\">&#39;Use `schedule up` to initialize schedules&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">schedule_name</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"n\">ScheduleStatus</span><span class=\"o\">.</span><span class=\"n\">STOPPED</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">DagsterInvariantViolationError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;You have attempted to stop schedule </span><span class=\"si\">{name}</span><span class=\"s1\">, but it is already stopped&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">schedule_name</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">stopped_schedule</span> <span class=\"o\">=</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">with_status</span><span class=\"p\">(</span><span class=\"n\">ScheduleStatus</span><span class=\"o\">.</span><span class=\"n\">STOPPED</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span><span class=\"o\">.</span><span class=\"n\">update_schedule</span><span class=\"p\">(</span><span class=\"n\">stopped_schedule</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_end_cron_job</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">stopped_schedule</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">end_schedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule_name</span><span class=\"p\">):</span>\n        <span class=\"n\">schedule</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_schedule_by_name</span><span class=\"p\">(</span><span class=\"n\">schedule_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">schedule</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">DagsterInvariantViolationError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;You have attempted to end schedule </span><span class=\"si\">{name}</span><span class=\"s1\">, but it is not running.&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n                    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">schedule_name</span>\n                <span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span><span class=\"o\">.</span><span class=\"n\">delete_schedule</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_end_cron_job</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">schedule</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">log_path_for_schedule</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule_name</span><span class=\"p\">):</span>\n        <span class=\"n\">schedule</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_schedule_by_name</span><span class=\"p\">(</span><span class=\"n\">schedule_name</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">schedule</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">DagsterInvariantViolationError</span><span class=\"p\">(</span>\n                <span class=\"s1\">&#39;You have attempted to get the logs for schedule </span><span class=\"si\">{name}</span><span class=\"s1\">, but it is not &#39;</span>\n                <span class=\"s1\">&#39;running&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">schedule_name</span><span class=\"p\">)</span>\n            <span class=\"p\">)</span>\n\n        <span class=\"n\">log_dir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span><span class=\"o\">.</span><span class=\"n\">get_log_path</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">log_dir</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">wipe</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_storage</span><span class=\"o\">.</span><span class=\"n\">wipe</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># Delete any other crontabs that are from dagster</span>\n        <span class=\"n\">cron</span> <span class=\"o\">=</span> <span class=\"n\">CronTab</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">job</span> <span class=\"ow\">in</span> <span class=\"n\">cron</span><span class=\"p\">:</span>\n            <span class=\"k\">if</span> <span class=\"s1\">&#39;dagster-schedule:&#39;</span> <span class=\"ow\">in</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"p\">:</span>\n                <span class=\"n\">cron</span><span class=\"o\">.</span><span class=\"n\">remove_all</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">comment</span><span class=\"p\">)</span>\n\n        <span class=\"n\">cron</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_file_prefix</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_artifacts_dir</span><span class=\"p\">,</span> <span class=\"s1\">&#39;</span><span class=\"si\">{}</span><span class=\"s1\">_</span><span class=\"si\">{}</span><span class=\"s1\">&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">schedule_id</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_get_bash_script_file_path</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"p\">):</span>\n        <span class=\"n\">file_prefix</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_file_prefix</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"s1\">&#39;</span><span class=\"si\">{}</span><span class=\"s1\">.sh&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">file_prefix</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_start_cron_job</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"p\">):</span>\n        <span class=\"n\">script_file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_write_bash_script_to_file</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n\n        <span class=\"n\">my_cron</span> <span class=\"o\">=</span> <span class=\"n\">CronTab</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">my_cron</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">script_file</span><span class=\"p\">,</span> <span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"s1\">&#39;dagster-schedule: &#39;</span> <span class=\"o\">+</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">schedule_id</span><span class=\"p\">)</span>\n        <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">setall</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">cron_schedule</span><span class=\"p\">)</span>\n        <span class=\"n\">my_cron</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_end_cron_job</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"p\">):</span>\n        <span class=\"n\">my_cron</span> <span class=\"o\">=</span> <span class=\"n\">CronTab</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"n\">my_cron</span><span class=\"o\">.</span><span class=\"n\">remove_all</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"s1\">&#39;dagster-schedule: &#39;</span> <span class=\"o\">+</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">schedule_id</span><span class=\"p\">)</span>\n        <span class=\"n\">my_cron</span><span class=\"o\">.</span><span class=\"n\">remove_all</span><span class=\"p\">(</span><span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">schedule_id</span><span class=\"p\">)</span>  <span class=\"c1\"># For backwards-compatability</span>\n        <span class=\"n\">my_cron</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">()</span>\n\n        <span class=\"n\">script_file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_bash_script_file_path</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n        <span class=\"k\">if</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">script_file</span><span class=\"p\">):</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">script_file</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_write_bash_script_to_file</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"p\">):</span>\n        <span class=\"n\">script_file</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_get_bash_script_file_path</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"p\">)</span>\n\n        <span class=\"n\">log_dir</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">log_path_for_schedule</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n        <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">mkdir_p</span><span class=\"p\">(</span><span class=\"n\">log_dir</span><span class=\"p\">)</span>\n        <span class=\"n\">result_file</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"n\">log_dir</span><span class=\"p\">,</span> <span class=\"s2\">&quot;</span><span class=\"si\">{}</span><span class=\"s2\">_</span><span class=\"si\">{}</span><span class=\"s2\">_</span><span class=\"si\">{}</span><span class=\"s2\">.result&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"s2\">&quot;$</span><span class=\"si\">{RUN_DATE}</span><span class=\"s2\">&quot;</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">schedule_id</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"n\">dagster_graphql_path</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n            <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">python_path</span><span class=\"p\">),</span> <span class=\"s1\">&#39;dagster-graphql&#39;</span>\n        <span class=\"p\">)</span>\n        <span class=\"n\">dagster_home</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">&#39;DAGSTER_HOME&#39;</span><span class=\"p\">)</span>\n\n        <span class=\"n\">script_contents</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;&#39;</span>\n<span class=\"s1\">            #!/bin/bash</span>\n<span class=\"s1\">            export DAGSTER_HOME=</span><span class=\"si\">{dagster_home}</span><span class=\"s1\"></span>\n<span class=\"s1\">            export LANG=en_US.UTF-8</span>\n<span class=\"s1\">            </span><span class=\"si\">{env_vars}</span><span class=\"s1\"></span>\n\n<span class=\"s1\">            export RUN_DATE=$(date &quot;+%Y%m</span><span class=\"si\">%d</span><span class=\"s1\">T%H%M%S&quot;)</span>\n\n<span class=\"s1\">            </span><span class=\"si\">{dagster_graphql_path}</span><span class=\"s1\"> -p startScheduledExecution -v &#39;</span><span class=\"si\">{variables}</span><span class=\"s1\">&#39; -y &quot;</span><span class=\"si\">{repo_path}</span><span class=\"s1\">&quot; --output &quot;</span><span class=\"si\">{result_file}</span><span class=\"s1\">&quot;</span>\n<span class=\"s1\">        &#39;&#39;&#39;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span>\n            <span class=\"n\">dagster_graphql_path</span><span class=\"o\">=</span><span class=\"n\">dagster_graphql_path</span><span class=\"p\">,</span>\n            <span class=\"n\">repo_path</span><span class=\"o\">=</span><span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">repository_path</span><span class=\"p\">,</span>\n            <span class=\"n\">variables</span><span class=\"o\">=</span><span class=\"n\">seven</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">({</span><span class=\"s2\">&quot;scheduleName&quot;</span><span class=\"p\">:</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">}),</span>\n            <span class=\"n\">result_file</span><span class=\"o\">=</span><span class=\"n\">result_file</span><span class=\"p\">,</span>\n            <span class=\"n\">dagster_home</span><span class=\"o\">=</span><span class=\"n\">dagster_home</span><span class=\"p\">,</span>\n            <span class=\"n\">env_vars</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span>\n                <span class=\"p\">[</span>\n                    <span class=\"s2\">&quot;export </span><span class=\"si\">{key}</span><span class=\"s2\">=</span><span class=\"si\">{value}</span><span class=\"s2\">&quot;</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">value</span><span class=\"p\">)</span>\n                    <span class=\"k\">for</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">schedule</span><span class=\"o\">.</span><span class=\"n\">environment_vars</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n\n        <span class=\"k\">with</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">script_file</span><span class=\"p\">,</span> <span class=\"s1\">&#39;w&#39;</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">&#39;utf-8&#39;</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n            <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">six</span><span class=\"o\">.</span><span class=\"n\">text_type</span><span class=\"p\">(</span><span class=\"n\">script_contents</span><span class=\"p\">))</span>\n\n        <span class=\"n\">st</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">stat</span><span class=\"p\">(</span><span class=\"n\">script_file</span><span class=\"p\">)</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">chmod</span><span class=\"p\">(</span><span class=\"n\">script_file</span><span class=\"p\">,</span> <span class=\"n\">st</span><span class=\"o\">.</span><span class=\"n\">st_mode</span> <span class=\"o\">|</span> <span class=\"n\">stat</span><span class=\"o\">.</span><span class=\"n\">S_IEXEC</span><span class=\"p\">)</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">script_file</span></div>\n</pre></div>",
  "current_page_name": "_modules/dagster_cron/cron_scheduler",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
