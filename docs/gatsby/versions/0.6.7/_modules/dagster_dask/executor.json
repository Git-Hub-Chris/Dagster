{
  "parents": [{ "link": "../../", "title": "Module code" }],
  "title": "dagster_dask.executor",
  "body": "<h1>Source code for dagster_dask.executor</h1><div class=\"highlight\"><pre>\n<span></span><span class=\"kn\">from</span> <span class=\"nn\">dagster</span> <span class=\"kn\">import</span> <span class=\"n\">Bool</span><span class=\"p\">,</span> <span class=\"n\">Field</span><span class=\"p\">,</span> <span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">String</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dagster.core.definitions.executor</span> <span class=\"kn\">import</span> <span class=\"n\">executor</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.config</span> <span class=\"kn\">import</span> <span class=\"n\">DaskConfig</span>\n\n\n<div class=\"viewcode-block\" id=\"dask_executor\"><a class=\"viewcode-back\" href=\"../../../sections/api/apidocs/dagster_dask/#dagster_dask.dask_executor\">[docs]</a><span class=\"nd\">@executor</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">&#39;dask&#39;</span><span class=\"p\">,</span>\n    <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">&#39;address&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n            <span class=\"n\">String</span><span class=\"p\">,</span>\n            <span class=\"n\">is_optional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;The address of a `Scheduler` server, e.g., `</span><span class=\"se\">\\&#39;</span><span class=\"s1\">127.0.0.1:8786</span><span class=\"se\">\\&#39;</span><span class=\"s1\">`.&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n        <span class=\"s1\">&#39;timeout&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n            <span class=\"n\">Int</span><span class=\"p\">,</span>\n            <span class=\"n\">is_optional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Timeout duration for initial connection to the scheduler.&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n        <span class=\"s1\">&#39;scheduler_file&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n            <span class=\"n\">String</span><span class=\"p\">,</span>\n            <span class=\"n\">is_optional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Path to a file with scheduler information if available.&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n        <span class=\"s1\">&#39;direct_to_workers&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n            <span class=\"n\">Bool</span><span class=\"p\">,</span>\n            <span class=\"n\">is_optional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Whether or not to connect directly to the workers, or to ask the &#39;</span>\n            <span class=\"s1\">&#39;scheduler to serve as intermediary.&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n        <span class=\"s1\">&#39;heartbeat_interval&#39;</span><span class=\"p\">:</span> <span class=\"n\">Field</span><span class=\"p\">(</span>\n            <span class=\"n\">Int</span><span class=\"p\">,</span>\n            <span class=\"n\">is_optional</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n            <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">&#39;Time in milliseconds between heartbeats to scheduler.&#39;</span><span class=\"p\">,</span>\n        <span class=\"p\">),</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">dask_executor</span><span class=\"p\">(</span><span class=\"n\">init_context</span><span class=\"p\">):</span>\n    <span class=\"sd\">&#39;&#39;&#39;Dask-based executor.</span>\n\n<span class=\"sd\">    If the Dask executor is used without providing executor-specific config, a local Dask cluster</span>\n<span class=\"sd\">    will be created (as when calling :py:class:`dask.distributed.Client() &lt;dask:distributed.Client&gt;`</span>\n<span class=\"sd\">    without specifying the scheduler address).</span>\n\n<span class=\"sd\">    The Dask executor optionally takes the following config:</span>\n\n<span class=\"sd\">    .. code-block::</span>\n\n<span class=\"sd\">        {</span>\n<span class=\"sd\">            address?: &#39;127.0.0.1:8786&#39;,  # The address of a Dask scheduler</span>\n<span class=\"sd\">            timeout?: 5,  # Timeout duration for initial connection to the scheduler</span>\n<span class=\"sd\">            scheduler_file?: &#39;/path/to/file&#39;  # Path to a file with scheduler information</span>\n<span class=\"sd\">            # Whether to connect directly to the workers, or ask the scheduler to serve as</span>\n<span class=\"sd\">            # intermediary</span>\n<span class=\"sd\">            direct_to_workers?: False,</span>\n<span class=\"sd\">            heartbeat_interval?: 1000,  # Time in milliseconds between heartbeats to scheduler</span>\n<span class=\"sd\">        }</span>\n\n<span class=\"sd\">    If you&#39;d like to configure a dask executor in addition to the</span>\n<span class=\"sd\">    :py:class:`~dagster.default_executors`, you should add it to the ``executor_defs`` defined on a</span>\n<span class=\"sd\">    :py:class:`~dagster.ModeDefinition` as follows:</span>\n\n<span class=\"sd\">    .. code-block:: python</span>\n\n<span class=\"sd\">        from dagster import ModeDefinition, default_executors, pipeline</span>\n<span class=\"sd\">        from dagster_dask import dask_executor</span>\n\n<span class=\"sd\">        @pipeline(mode_defs=[ModeDefinition(executor_defs=default_executors + [dask_executor])])</span>\n<span class=\"sd\">        def dask_enabled_pipeline():</span>\n<span class=\"sd\">            pass</span>\n\n<span class=\"sd\">    &#39;&#39;&#39;</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">DaskConfig</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">init_context</span><span class=\"o\">.</span><span class=\"n\">executor_config</span><span class=\"p\">)</span></div>\n</pre></div>",
  "current_page_name": "_modules/dagster_dask/executor",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
