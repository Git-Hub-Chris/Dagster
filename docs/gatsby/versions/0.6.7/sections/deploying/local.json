{
  "parents": [{ "link": "../", "title": "Deploying Dagster" }],
  "prev": { "link": "../", "title": "Deploying Dagster" },
  "next": { "link": "../aws/", "title": "AWS Deployment" },
  "title": "Local or Standalone Dagit",
  "meta": {},
  "body": "<div class=\"section\" id=\"local-or-standalone-dagit\">\n<span id=\"local-dagit\"></span><h1>Local or Standalone Dagit<a class=\"headerlink\" href=\"#local-or-standalone-dagit\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<p>The simplest way to deploy Dagster / Dagit is in standalone mode. You can deploy Dagit as a service\nin your environment; some options for configuring this are described below.</p>\n<p class=\"rubric\">Run on a VM</p>\n<p>To launch Dagit on a bare VM, ensure that you\u2019ve got a recent Python version (preferably 3.7, but\n2.7, 3.5, 3.6, and 3.7 are supported), and preferably a virtualenv configured. Then, you can install\nDagster and any libraries you need:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ virtualenv --python<span class=\"o\">=</span>/usr/bin/python3 /some/path/to/venv\n$ <span class=\"nb\">source</span> /some/path/to/venv/bin/activate\n$ pip install dagster dagit dagster-aws <span class=\"c1\"># ... any other dagster libraries you need, e.g. dagster-bash</span>\n</pre></div>\n</div>\n<p>To run Dagit, you can run something like the following:</p>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span>$ <span class=\"nv\">DAGSTER_HOME</span><span class=\"o\">=</span>/set/a/dagster_home dagit -h <span class=\"m\">0</span>.0.0.0 -p <span class=\"m\">3000</span>\n</pre></div>\n</div>\n<p>In this configuration, Dagit will write execution logs to <code class=\"docutils literal notranslate\"><span class=\"pre\">$DAGSTER_HOME/logs</span></code> and listen on port\n3000. To run Dagit as a long-lived service on this host, you can install a systemd service similar\nto the AWS quick start, with something like:</p>\n<div class=\"highlight-default notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"p\">[</span><span class=\"n\">Unit</span><span class=\"p\">]</span>\n<span class=\"n\">Description</span><span class=\"o\">=</span><span class=\"n\">Run</span> <span class=\"n\">Dagit</span>\n<span class=\"n\">After</span><span class=\"o\">=</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">target</span>\n\n<span class=\"p\">[</span><span class=\"n\">Service</span><span class=\"p\">]</span>\n<span class=\"n\">Type</span><span class=\"o\">=</span><span class=\"n\">simple</span>\n<span class=\"n\">User</span><span class=\"o\">=</span><span class=\"n\">ubuntu</span>\n<span class=\"n\">ExecStart</span><span class=\"o\">=/</span><span class=\"nb\">bin</span><span class=\"o\">/</span><span class=\"n\">bash</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\</span>\n<span class=\"s1\">    export DAGSTER_HOME=/opt/dagster/dagster_home &amp;&amp; </span><span class=\"se\">\\</span>\n<span class=\"s1\">    export PYTHONPATH=$PYTHONPATH:/opt/dagster/app &amp;&amp; </span><span class=\"se\">\\</span>\n<span class=\"s1\">    export LC_ALL=C.UTF-8 &amp;&amp; </span><span class=\"se\">\\</span>\n<span class=\"s1\">    export LANG=C.UTF-8 &amp;&amp; </span><span class=\"se\">\\</span>\n<span class=\"s1\">    source /opt/dagster/venv/bin/activate &amp;&amp; </span><span class=\"se\">\\</span>\n<span class=\"s1\">    /opt/dagster/venv/bin/dagit </span><span class=\"se\">\\</span>\n<span class=\"s1\">        -h 0.0.0.0 </span><span class=\"se\">\\</span>\n<span class=\"s1\">        -p 3000 </span><span class=\"se\">\\</span>\n<span class=\"s1\">        -y /opt/dagster/app/repository.yaml</span>\n<span class=\"n\">Restart</span><span class=\"o\">=</span><span class=\"n\">always</span>\n<span class=\"n\">WorkingDirectory</span><span class=\"o\">=/</span><span class=\"n\">opt</span><span class=\"o\">/</span><span class=\"n\">dagster</span><span class=\"o\">/</span><span class=\"n\">app</span><span class=\"o\">/</span>\n\n<span class=\"p\">[</span><span class=\"n\">Install</span><span class=\"p\">]</span>\n<span class=\"n\">WantedBy</span><span class=\"o\">=</span><span class=\"n\">multi</span><span class=\"o\">-</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">target</span>\n</pre></div>\n</div>\n<p>Note that this assumes you\u2019ve got a virtualenv for Dagster at <code class=\"docutils literal notranslate\"><span class=\"pre\">/opt/dagster/venv</span></code> and your client\ncode and <code class=\"docutils literal notranslate\"><span class=\"pre\">repository.yaml</span></code> are located at <code class=\"docutils literal notranslate\"><span class=\"pre\">/opt/dagster/app</span></code>.</p>\n<p class=\"rubric\">Docker</p>\n<p>If you are running on AWS ECS, Kubernetes, or some other container-based orchestration system,\nyou\u2019ll likely want to containerize Dagit using Docker.</p>\n<p>A minimal skeleton <code class=\"docutils literal notranslate\"><span class=\"pre\">Dockerfile</span></code> and entrypoint shell script that will run Dagit and the cron\nscheduler are shown below:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id1\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">Dockerfile</span><a class=\"headerlink\" href=\"#id1\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-Dockerfile notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"k\">FROM</span> <span class=\"s\">dagster:dagster-py37:latest</span>\n\n<span class=\"k\">RUN</span> mkdir /opt/dagster/dagster_home\n\n<span class=\"k\">WORKDIR</span><span class=\"s\"> /</span>\n\n<span class=\"c\"># COPY ## -&gt; TODO: copy your Dagster client code here</span>\n\n<span class=\"k\">COPY</span> entrypoint.sh .\n<span class=\"k\">RUN</span> chmod +x /entrypoint.sh\n\n<span class=\"k\">EXPOSE</span><span class=\"s\"> 3000</span>\n\n<span class=\"k\">ENTRYPOINT</span> <span class=\"p\">[</span><span class=\"s2\">&quot;/entrypoint.sh&quot;</span><span class=\"p\">]</span>\n</pre></div>\n</div>\n</div>\n<p>You can do something like the following <code class=\"docutils literal notranslate\"><span class=\"pre\">entrypoint.sh</span></code> to ensure cron is running in the Docker\ncontainer alongside Dagit:</p>\n<div class=\"literal-block-wrapper docutils container\" id=\"id2\">\n<div class=\"code-block-caption\"><span class=\"caption-text\">entrypoint.sh</span><a class=\"headerlink\" href=\"#id2\" title=\"Permalink to this code\">\u00b6</a></div>\n<div class=\"highlight-shell notranslate\"><div class=\"highlight\"><pre><span></span><span class=\"ch\">#!/bin/sh</span>\n\n<span class=\"c1\"># see: https://unix.stackexchange.com/a/453053 - fix link-count</span>\ntouch /etc/crontab /etc/cron.*/*\n\nservice cron start\n\n<span class=\"nb\">export</span> <span class=\"nv\">DAGSTER_HOME</span><span class=\"o\">=</span>/opt/dagster/dagster_home\n\n<span class=\"c1\"># Add all schedules</span>\n/usr/local/bin/dagster schedule up\n\n<span class=\"c1\"># Restart previously running schedules</span>\n/usr/local/bin/dagster schedule restart --restart-all-running\n</pre></div>\n</div>\n</div>\n<p>This <code class=\"docutils literal notranslate\"><span class=\"pre\">Dockerfile</span></code> is based on the <a class=\"reference external\" href=\"https://cloud.docker.com/u/dagster/repository/docker/dagster/dagster\">public Docker\nimages</a>. We publish versions\nfor Python 2.7, 3.5, 3.6, and 3.7.</p>\n</div>\n",
  "metatags": "",
  "rellinks": [
    ["genindex", "General Index", "I", "index"],
    ["py-modindex", "Python Module Index", "", "modules"],
    ["sections/deploying/aws", "AWS Deployment", "N", "next"],
    ["sections/deploying/index", "Deploying Dagster", "P", "previous"]
  ],
  "sourcename": "sections/deploying/local.rst.txt",
  "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">Local or Standalone Dagit</a></li>\n</ul>\n",
  "display_toc": false,
  "page_source_suffix": ".rst",
  "current_page_name": "sections/deploying/local",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
