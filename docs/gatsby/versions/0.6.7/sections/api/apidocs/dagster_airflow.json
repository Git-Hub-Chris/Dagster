{
  "parents": [{ "link": "../../api/", "title": "API Docs" }],
  "prev": { "link": "../internals/", "title": "Internals" },
  "next": { "link": "../dagster_celery/", "title": "dagster_celery" },
  "title": "dagster_airflow",
  "meta": {},
  "body": "<div class=\"section\" id=\"dagster-airflow\">\n<h1>dagster_airflow<a class=\"headerlink\" href=\"#dagster-airflow\" title=\"Permalink to this headline\">\u00b6</a></h1>\n<dl class=\"function\">\n<dt id=\"dagster_airflow.make_airflow_dag\">\n<code class=\"sig-prename descclassname\">dagster_airflow.</code><code class=\"sig-name descname\">make_airflow_dag</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">module_name</em>, <em class=\"sig-param\">pipeline_name</em>, <em class=\"sig-param\">environment_dict=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">instance=None</em>, <em class=\"sig-param\">dag_id=None</em>, <em class=\"sig-param\">dag_description=None</em>, <em class=\"sig-param\">dag_kwargs=None</em>, <em class=\"sig-param\">op_kwargs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_airflow/factory/#make_airflow_dag\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_airflow_dag\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct an Airflow DAG corresponding to a given Dagster pipeline.</p>\n<p>Tasks in the resulting DAG will execute the Dagster logic they encapsulate as a Python\ncallable, run by an underlying <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PythonOperator</span></code>. As a\nconsequence, both dagster, any Python dependencies required by your solid logic, and the module\ncontaining your pipeline definition must be available in the Python environment within which\nyour Airflow tasks execute. If you cannot install requirements into this environment, or you\nare looking for a containerized solution to provide better isolation, see instead\n<a class=\"reference internal\" href=\"#dagster_airflow.make_airflow_dag_containerized\" title=\"dagster_airflow.make_airflow_dag_containerized\"><code class=\"xref py py-func docutils literal notranslate\"><span class=\"pre\">make_airflow_dag_containerized()</span></code></a>.</p>\n<p>This function should be invoked in an Airflow DAG definition file, such as that created by an\ninvocation of the dagster-airflow scaffold CLI tool.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>module_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the importable module in which the pipeline definition can be\nfound.</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline definition.</p></li>\n<li><p><strong>environment_dict</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment config, if any, with which to compile\nthe pipeline to an execution plan, as a Python dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode in which to execute the pipeline.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../internals/#dagster.core.instance.DagsterInstance\" title=\"dagster.core.instance.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The Dagster instance to use to execute the pipeline.</p></li>\n<li><p><strong>dag_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The id to use for the compiled Airflow DAG (passed through to\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>).</p></li>\n<li><p><strong>dag_description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The description to use for the compiled Airflow DAG\n(passed through to <a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>)</p></li>\n<li><p><strong>dag_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the Airflow\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a> constructor, including <code class=\"docutils literal notranslate\"><span class=\"pre\">default_args</span></code>.</p></li>\n<li><p><strong>op_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the underlying Airflow\noperator (a subclass of\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/python_operator/index.html#airflow.operators.python_operator.PythonOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">PythonOperator</span></code></a>).</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The generated Airflow DAG, and a\nlist of its constituent tasks.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>(<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\">airflow.models.DAG</a>, List[<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.BaseOperator\" title=\"(in Airflow v1.10.6)\">airflow.models.BaseOperator</a>])</p>\n</dd>\n</dl>\n</dd></dl>\n\n<dl class=\"function\">\n<dt id=\"dagster_airflow.make_airflow_dag_containerized\">\n<code class=\"sig-prename descclassname\">dagster_airflow.</code><code class=\"sig-name descname\">make_airflow_dag_containerized</code><span class=\"sig-paren\">(</span><em class=\"sig-param\">module_name</em>, <em class=\"sig-param\">pipeline_name</em>, <em class=\"sig-param\">image</em>, <em class=\"sig-param\">environment_dict=None</em>, <em class=\"sig-param\">mode=None</em>, <em class=\"sig-param\">dag_id=None</em>, <em class=\"sig-param\">dag_description=None</em>, <em class=\"sig-param\">dag_kwargs=None</em>, <em class=\"sig-param\">op_kwargs=None</em><span class=\"sig-paren\">)</span><a class=\"reference internal\" href=\"../../../../_modules/dagster_airflow/factory/#make_airflow_dag_containerized\"><span class=\"viewcode-link\">[source]</span></a><a class=\"headerlink\" href=\"#dagster_airflow.make_airflow_dag_containerized\" title=\"Permalink to this definition\">\u00b6</a></dt>\n<dd><p>Construct a containerized Airflow DAG corresponding to a given Dagster pipeline.</p>\n<p>Tasks in the resulting DAG will execute the Dagster logic they encapsulate by calling the\ndagster-graphql API exposed by a container run using a subclass of\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/docker_operator/index.html#airflow.operators.docker_operator.DockerOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DockerOperator</span></code></a>. As a\nconsequence, both dagster, any Python dependencies required by your solid logic, and the module\ncontaining your pipeline definition must be available in the container spun up by this operator.\nTypically you\u2019ll want to install these requirements onto the image you\u2019re using.</p>\n<p>This function should be invoked in an Airflow DAG definition file, such as that created by an\ninvocation of the dagster-airflow scaffold CLI tool.</p>\n<dl class=\"field-list simple\">\n<dt class=\"field-odd\">Parameters</dt>\n<dd class=\"field-odd\"><ul class=\"simple\">\n<li><p><strong>module_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the importable module in which the pipeline definition can be\nfound.</p></li>\n<li><p><strong>pipeline_name</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the pipeline definition.</p></li>\n<li><p><strong>image</strong> (<a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a>) \u2013 The name of the Docker image to use for execution (passed through to\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/docker_operator/index.html#airflow.operators.docker_operator.DockerOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DockerOperator</span></code></a>).</p></li>\n<li><p><strong>environment_dict</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 The environment config, if any, with which to compile\nthe pipeline to an execution plan, as a Python dict.</p></li>\n<li><p><strong>mode</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The mode in which to execute the pipeline.</p></li>\n<li><p><strong>instance</strong> (<em>Optional</em><em>[</em><a class=\"reference internal\" href=\"../internals/#dagster.core.instance.DagsterInstance\" title=\"dagster.core.instance.DagsterInstance\"><em>DagsterInstance</em></a><em>]</em>) \u2013 The Dagster instance to use to execute the pipeline.</p></li>\n<li><p><strong>dag_id</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The id to use for the compiled Airflow DAG (passed through to\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>).</p></li>\n<li><p><strong>dag_description</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#str\" title=\"(in Python v3.8)\"><em>str</em></a><em>]</em>) \u2013 The description to use for the compiled Airflow DAG\n(passed through to <a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a>)</p></li>\n<li><p><strong>dag_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the Airflow\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DAG</span></code></a> constructor, including <code class=\"docutils literal notranslate\"><span class=\"pre\">default_args</span></code>.</p></li>\n<li><p><strong>op_kwargs</strong> (<em>Optional</em><em>[</em><a class=\"reference external\" href=\"https://docs.python.org/3/library/stdtypes.html#dict\" title=\"(in Python v3.8)\"><em>dict</em></a><em>]</em>) \u2013 Any additional kwargs to pass to the underlying Airflow\noperator (a subclass of\n<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/operators/docker_operator/index.html#airflow.operators.docker_operator.DockerOperator\" title=\"(in Airflow v1.10.6)\"><code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">DockerOperator</span></code></a>).</p></li>\n</ul>\n</dd>\n<dt class=\"field-even\">Returns</dt>\n<dd class=\"field-even\"><p>The generated Airflow DAG, and a\nlist of its constituent tasks.</p>\n</dd>\n<dt class=\"field-odd\">Return type</dt>\n<dd class=\"field-odd\"><p>(<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.DAG\" title=\"(in Airflow v1.10.6)\">airflow.models.DAG</a>, List[<a class=\"reference external\" href=\"https://airflow.apache.org/_api/airflow/models/index.html#airflow.models.BaseOperator\" title=\"(in Airflow v1.10.6)\">airflow.models.BaseOperator</a>])</p>\n</dd>\n</dl>\n</dd></dl>\n\n</div>\n",
  "metatags": "",
  "rellinks": [
    ["genindex", "General Index", "I", "index"],
    ["py-modindex", "Python Module Index", "", "modules"],
    ["sections/api/apidocs/dagster_celery", "dagster_celery", "N", "next"],
    ["sections/api/apidocs/internals", "Internals", "P", "previous"]
  ],
  "sourcename": "sections/api/apidocs/dagster_airflow.rst.txt",
  "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">dagster_airflow</a></li>\n</ul>\n",
  "display_toc": false,
  "page_source_suffix": ".rst",
  "current_page_name": "sections/api/apidocs/dagster_airflow",
  "sidebars": ["globaltoc.html", "searchbox.html"],
  "customsidebar": null,
  "alabaster_version": "0.7.12"
}
