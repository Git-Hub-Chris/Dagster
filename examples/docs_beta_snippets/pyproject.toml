[project]
name = "docs_beta_snippets"
version = "0.1.0"
authors = [
  { name = "Dagster Labs", email = "hello@dagsterlabs.com"}
]
license = "Apache-2.0"
description = "Dagster project for docs beta snippets."
readme = "README.md"
requires-python = ">=3.8,<3.13"
classifiers=[
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]

[project.urls]
url = "https://github.com/dagster-io/dagster/tree/master/examples/docs_beta_snippets"

[project.optional-dependencies]
dev = ["dagster-webserver", "pytest"]

[tool.ruff]

# Extend example root configuration.
extend = "../pyproject.toml"

# Shorter line length for docs snippets for better browser formatting.
line-length = 88

[tool.ruff.lint]

# Use extend-ignore so that we ignore all the same codes ignored in root.
extend-ignore = [

  # (Unused import): When the same symbol is imported in multiple blocks, the
  # last import takes precedence for python. This causes Ruff to think an
  # import in an earlier block is unused and report F401.
  "F401",

  # (Redefinition): This happens frequently in docs_snippets when we import the same symbol in multiple
  # snippets within the same file.
  "F811",

  # (local variable assigned but never used): This happens a lot in docs snippets for didactic
  # purposes.
  "F841",

  # (flake8-type-checking) No need to complicate docs snippets with `if TYPE_CHECKING` blocks.
  "TCH",
]

[tool.ruff.lint.isort]

# Ensures ruff classifies imports from `dagster` as first-party. Keeps snippet imports relatively
# compressed.
known-first-party = ["dagster"]

[tool.setuptools.packages.find]
exclude = ["docs_beta_snippets_tests"]
