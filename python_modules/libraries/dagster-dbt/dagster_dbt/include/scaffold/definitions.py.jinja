from pathlib import Path

from dagster import Definitions, OpExecutionContext

from dagster_dbt import DbtCli, dbt_assets

dbt_project_dir = Path("{{ dbt_project_dir }}")
dbt_manifest_path = dbt_project_dir.joinpath("target", "manifest.json")


@dbt_assets(manifest=dbt_manifest_path)
def {{ dbt_assets_name }}(context: OpExecutionContext, dbt: DbtCli):
    yield from dbt.cli(["build"], context=context).stream()


schedules = [
    {{ dbt_assets_name }}.build_schedule_from_dbt_selection(
        job_name="materialize_dbt_models",
        cron_schedule="0 0 * * *",
        dbt_select="fqn:*",
    )
]

defs = Definitions(
    assets=[{{ dbt_assets_name }}],
    schedules=schedules,
    resources={
        "dbt": DbtCli(
            project_dir=dbt_project_dir.as_posix(),
        ),
    },
)
