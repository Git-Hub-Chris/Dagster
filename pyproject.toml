[tool.uv]
dev-dependencies = ["ruff==0.5.5"]

[tool.pyright]
include = [
    ".buildkite/dagster-buildkite",
    "docs/dagster-ui-screenshot",
    "docs/sphinx/_ext/dagster-sphinx",
    "python_modules",
    "examples",
    "integration_tests",
    "scripts",
]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "**/__generated__",
    "**/vendor",
    "**/_vendored",
    "**/.tox",
    ".git",
    "**/.venv*",
    "**/build",
]
venv = ".venv"
venvPath = "pyright/master"
analyzeUnannotatedFunctions = false
pythonVersion = "3.8"
typeCheckingMode = "basic"
useLibraryCodeForTypes = false
reportInvalidStringEscapeSequence = false
reportPrivateImportUsage = false
reportUnnecessaryTypeIgnoreComment = "warning"

[tool.ruff]
target-version = "py38"
extend-include = ["*.ipynb"]
extend-exclude = [
    "*/__generated__/*",
    "*/dagster_airflow/vendor/*",
    "*/_vendored/*",
    "*/snapshots/*",
    "python_modules/libraries/dagstermill/dagstermill_tests/notebooks/cli_test_scaffold.ipynb",
]
line-length = 100
required-version = "0.5.5"

[tool.dagster]
module_name = "dagster_test.toys.repo"

[tool.uv.workspace]
members = [
    "docs/sphinx/_ext/dagster-sphinx",
    "python_modules/dagster-pipes",
    "python_modules/dagster",
    "python_modules/automation",
    "python_modules/dagster-graphql",
    "python_modules/dagster-test",
    "python_modules/dagster-webserver",
    "python_modules/dagit",
    "python_modules/libraries/*",
]

[tool.ruff.lint]
exclude = ["*.ipynb"]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D401",
    "E402",
    "E501",
    "E721",
    "E722",
    "E731",
    "PERF203",
    "RUF005",
    "RUF012",
    "D200",
    "D205",
    "D417",
    "PERF401",
    "PERF402",
]
select = [
    "A001",
    "A002",
    "B018",
    "B035",
    "D",
    "E",
    "F",
    "I001",
    "PERF",
    "PLE",
    "PLW",
    "RUF",
    "SLF001",
    "TCH",
    "TID251",
    "T20",
    "UP032",
    "W605",
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::dagster.ExperimentalWarning",
    "ignore::DeprecationWarning",
    "ignore::UserWarning",
    "ignore::pytest.PytestCollectionWarning",
]

[tool.uv.sources.dagster-pipes]
workspace = true

[tool.uv.sources.dagster]
workspace = true

[tool.uv.sources.dagster-cloud]
workspace = true

[tool.uv.sources.dagster-dbt]
workspace = true

[tool.uv.sources.dagster-duckdb]
workspace = true

[tool.uv.sources.dagster-duckdb-pandas]
workspace = true

[tool.uv.sources.dagster-airbyte]
workspace = true

[tool.uv.sources.dagster-postgres]
workspace = true

[tool.uv.sources.dagster-pandera]
workspace = true

[tool.uv.sources.dagster-pandas]
workspace = true

[tool.uv.sources.dagster-snowflake]
workspace = true

[tool.uv.sources.dagster-snowflake-pandas]
workspace = true

[tool.uv.sources.dagster-airflow]
workspace = true

[tool.uv.sources.dagster-aws]
workspace = true

[tool.uv.sources.dagster-celery]
workspace = true

[tool.uv.sources.dagster-dask]
workspace = true

[tool.uv.sources.dagster-databricks]
workspace = true

[tool.uv.sources.dagster-deltalake]
workspace = true

[tool.uv.sources.dagster-deltalake-pandas]
workspace = true

[tool.uv.sources.dagster-deltalake-polars]
workspace = true

[tool.uv.sources.dagster-embedded-elt]
workspace = true

[tool.uv.sources.dagster-fivetran]
workspace = true

[tool.uv.sources.dagster-gcp]
workspace = true

[tool.uv.sources.dagster-gcp-pandas]
workspace = true

[tool.uv.sources.dagster-gcp-pyspark]
workspace = true

[tool.uv.sources.dagster-graphql]
workspace = true

[tool.uv.sources.dagster-k8s]
workspace = true

[tool.uv.sources.dagster-slack]
workspace = true

[tool.uv.sources.dagster-webserver]
workspace = true

[tool.uv.sources.dagstermill]
workspace = true

[tool.uv.sources.dagster-blueprints]
workspace = true

[tool.uv.sources.dagster-hex]
workspace = true

[tool.uv.sources.dagster-pyspark]
workspace = true

[tool.uv.sources.dagster-spark]
workspace = true

[tool.uv.sources.dagster_duckdb]
workspace = true

[tool.uv.sources.dagster-ge]
workspace = true

[tool.uv.sources.dagster-openai]
workspace = true

[tool.uv.sources.dagster-wandb]
workspace = true

[tool.uv.sources.dagster-airlift]
workspace = true

[tool.uv.sources.dagster-managed-elements]
workspace = true

[tool.uv.sources.dagster-azure]
workspace = true

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.isort]
combine-as-imports = true
split-on-trailing-comma = false
force-wrap-aliases = true

[tool.ruff.lint.per-file-ignores]
"**/alembic/versions/*.py" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-tidy-imports.banned-api."__future__.annotations"]
msg = "Directly quote annotations instead."
